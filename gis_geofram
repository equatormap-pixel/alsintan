index.html
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Peta Ketersediaan Alsintan</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"/>
  <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
  <style>
    body { margin: 0; font-family: Arial, sans-serif; }
    #map { height: 90vh; width: 100%; }
    #filter {
      margin: 10px;
      position: absolute;
      top: 10px; left: 50%;
      transform: translateX(-50%);
      background: white;
      padding: 8px 12px;
      border-radius: 8px;
      box-shadow: 0 0 6px rgba(0,0,0,0.2);
      z-index: 1000;
    }
  </style>
</head>
<body>
  <div id="filter">
    <label for="alatSelect"><b>Filter alat:</b></label>
    <select id="alatSelect">
      <option value="all">Semua</option>
    </select>
  </div>

  <div id="map"></div>

  <script>
    // ðŸ”¹ Ganti dengan URL CSV publik Google Sheet kamu
    const sheetUrl = 'https://docs.google.com/spreadsheets/d/YOUR_SHEET_ID/gviz/tq?tqx=out:csv&sheet=data_kobo';

    const map = L.map('map').setView([-0.14, 109.3], 10);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19,
      attribution: 'Â© OpenStreetMap'
    }).addTo(map);

    let markers = [];
    let allData = [];

    function renderMarkers(filterAlat) {
      markers.forEach(m => map.removeLayer(m));
      markers = [];

      allData.forEach(row => {
        const lat = parseFloat(row.lat);
        const lon = parseFloat(row.lon);
        if (isNaN(lat) || isNaN(lon)) return;

        if (filterAlat !== 'all' && row.alat !== filterAlat) return;

        const warna = parseInt(row.jumlah_tersedia) >= parseInt(row.jumlah_dibutuhkan) ? 'green' : 'red';
        const marker = L.circleMarker([lat, lon], {
          radius: 8,
          color: warna,
          fillColor: warna,
          fillOpacity: 0.8
        }).addTo(map);

        const popup = `
          <b>Desa:</b> ${row.desa}<br/>
          <b>Alat:</b> ${row.alat}<br/>
          <b>Tersedia:</b> ${row.jumlah_tersedia} unit<br/>
          <b>Dibutuhkan:</b> ${row.jumlah_dibutuhkan} unit
        `;
        marker.bindPopup(popup);
        markers.push(marker);
      });
    }

    fetch(sheetUrl)
      .then(res => res.text())
      .then(csv => {
        const rows = csv.split('\n').map(r => r.split(','));
        const headers = rows[0].map(h => h.trim());
        const alatIndex = headers.indexOf('jenis_alsintan');
        const desaIndex = headers.indexOf('desa');
        const latIndex = headers.indexOf('Latitude');
        const lonIndex = headers.indexOf('Longitude');
        const tersediaIndex = headers.indexOf('jumlah_tersedia');
        const butuhIndex = headers.indexOf('jumlah_dibutuhkan');

        allData = rows.slice(1).map(r => ({
          desa: r[desaIndex],
          alat: r[alatIndex],
          lat: r[latIndex],
          lon: r[lonIndex],
          jumlah_tersedia: r[tersediaIndex],
          jumlah_dibutuhkan: r[butuhIndex]
        }));

        const alatSet = new Set(allData.map(d => d.alat).filter(a => a));
        const select = document.getElementById('alatSelect');
        alatSet.forEach(a => {
          const opt = document.createElement('option');
          opt.value = a;
          opt.textContent = a;
          select.appendChild(opt);
        });

        renderMarkers('all');

        select.addEventListener('change', () => {
          renderMarkers(select.value);
        });
      });
  </script>
</body>
</html>

